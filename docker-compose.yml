version: '3.8'

services:

  postgres:
    image: postgres
    container_name: db_postgres
    command: 
      - "postgres"
      - "-c" 
      - "max_connections=200"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
    environment:
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=my_password
    volumes:
      - ./docker/db:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U my_user -d my_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  pgadmin:
    image: dpage/pgadmin4:5.7
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "tuitfb@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "my_user"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 5050:80
    restart: always
  
  mywso2am:
    image: wso2/wso2am:4.0.0-centos
    container_name: my_wso2am
    ports:
      - 9443:9443
      - 8280:8280
      - 8243:8243
    volumes:
      - ./wso2am-4/deployment.toml:/home/wso2carbon/wso2am-4.0.0/repository/conf/deployment.toml
      - ./wso2am-4/_TokenAPI_.xml:/home/wso2carbon/wso2am-4.0.0/repository/deployment/server/synapse-configs/default/api/_TokenAPI_.xml
      - ./wso2am-4/sequences:/home/wso2carbon/wso2am-4.0.0/repository/deployment/server/synapse-configs/default/sequences/
      - ./wso2am-4/lib:/home/wso2carbon/wso2am-4.0.0/repository/components/lib/

  #===========

  myprometheus:
    image: prom/prometheus
    container_name: my_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    restart: always

  loki:
    image: grafana/loki
    volumes:
      - ./loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yaml
    ports:
      - 3100:3100
 
  promtail:
    depends_on:
      - loki
    image: grafana/promtail
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml

  # myalertmanager:
  #   image: prom/alertmanager
  #   container_name: my_alertmanager
  #   volumes:
  #     - ./alertmanager:/etc/alertmanager
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
  #   restart: always
  #   ports:
  #     - 9094:9094

  mynode-exporter:
    image: prom/node-exporter
    container_name: my_nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    ports:
      - 9100:9100
    networks:
      - default

  mycadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: my_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: always
    ports:
      - 8081:8080

  mygrafana:
    depends_on:
      - loki
    image: grafana/grafana
    container_name: my_grafana
    environment:
     - GF_SECURITY_ADMIN_USER=my_user
     - GF_SECURITY_ADMIN_PASSWORD=my_password
     - GF_USERS_ALLOW_SIGN_UP=false
     - GF_USERS_DEFAULT_THEME=dark
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    
  mypushgateway:
    image: prom/pushgateway
    container_name: my_pushgateway
    restart: always
    ports:
      - 9091:9091

  # mycaddy:
  #   image: stefanprodan/caddy
  #   container_name: my_caddy
  #   ports:
  #     - 3000:3000
  #     - 9090:9090
  #     - 9094:9094
  #     - 9091:9091
  #   volumes:
  #     - ./caddy:/etc/caddy
  #   environment:
  #     - ADMIN_USER=my_user
  #     - ADMIN_PASSWORD=my_password
  #   restart: always

volumes:  
  postgres_data:
  pgadmin_data:
  grafana_data:
  prometheus_data:

networks:
  default:
    driver: bridge